[기본클래스]
	- java.lang패키지 : 기본적으로 많이 사용하는 클래스들이 포함되어 있는 폴더
	- import 문을 직접 쓰지 않아도 자동으로 추가되는 패키지 
	- Object, String , System , Integer 등등

[Object 클래스 ]
	1. 자바에서의 최상위 클래스
	2. 모든 클래스는 자동으로 extends Object 된다.
		-> 자바 100% 객체지향 구현, 다형성
	3. 주요 메소드 
		(1) .toString() : 인스턴스의 참조(주소) 값(16진수) 반환 함수
			- 주로 오버라이딩(재정의)해서 객체의 설명 변경한다.
		(2) .equals() : 두 인스턴스가 동일한지 여부를 반환 함수
			- 주로 String 타입 의 문자열 비교에서 사용된다.
			- 차이점
				1. == : 스택 메모리 값 비교  , 리터럴 값 비교 
				2. .equals() : 힙 메모리 값 비교 , 참조(주소)값 비교 
		(3) .hashCode() : 인스턴스의 해시 코드 값을 반환 함수.
			- 인스턴스의 주소값을 정수로 반환하는 함수.
			- 주로 객체가 저장된 위치를 검색할 때 사용되는 자료구조 입니다.
		
				
스택 메모리						힙 메모리
- 함수내 선언된 변수/지역변수		- 멤버변수 
- 기본타입의 리터럴 값 저장			- 참조타입의 값 저장 
int a = 3;
String str = 				new String("유재석");

[ Class 클래스 ]
	- * 우리가 코드를 작성하는 파일은 .java 라는 확장자 파일이다.*
		- .java파일 실행(컴파일/번역) 하면 .class 파일 생성된다.
			.java파일(src폴더) 
			.class파일(bin폴더)
	1. 클래스의 정보를 사용할 경우 사용하는 클래스 
	2. 주요 메소드 
		[ 타입들의 클래스 정보를 JVM으로 가져오는 방법 ]
		1. Class 변수명 = (인스턴스).getClass() : 인스턴스의 class 정보 반환 함수.
			- 주로 : 인스턴스의 타입을 확인할때 사용된다.
		2. Class 변수명 = 타입.class;	: 타입의 클래스 정보를 가져오는 함수.
		3. Class.forName("클래스이름") : 지정한 클래스 정보를 가져오는 함수.
			- 주로 : 외부 라이브러리( MYSQL Driver ) 클래스 가져올때 사용된다.
			- 일반예외 발생 하므로 예외처리 필수이다.
			- 동적 로딩 사용된다.
			
		[ 클래스의 정보 반환 함수들 ]
		1. .getFields() : 클래스가 갖는 모든 멤버변수 정보 반한 함수
		2. .getConstructors(); : 클래스가 갖는 모든 생성자 정보 반환 함수 
		3. .getMethods() : 클래스가 갖는 모든 메소드 정보 반환 함수.
			- import java.lang.reflect.Field;
		
		[ 리플렉션 ] : 클래스,인터페이스의 타입 정보를 찾아서 확인하는 방법
		[ 동적 로딩 ] : class 파일를 읽어 들여 class 인스턴스 를 생성하는 방법
		

				
				